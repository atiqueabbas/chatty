buildscript {
    def springBootVersion = '1.2.0.M2'
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    }
}

plugins {
    id 'org.hidetake.ssh' version '0.4.3'
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply from: "$rootDir/gradle/integrationTest.gradle"

dependencies {
    compile project(':com.toedter.chatty.model')
    
    def springBootVersion = '1.2.0.M2'
    // compile "org.springframework.data:spring-data-rest-core:2.2.0.RELEASE"
    compile "org.springframework.data:spring-data-rest-webmvc:2.3.0.BUILD-SNAPSHOT"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-rest:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:2.4.1.2"
    compile "org.springframework.hateoas:spring-hateoas:0.16.0.RELEASE"
    compile "org.springframework.plugin:spring-plugin-core:1.1.0.RELEASE"
    compile "com.jayway.jsonpath:json-path:0.9.1"
    compile "org.projectlombok:lombok:1.14.4"
    compile "org.atmosphere:atmosphere-runtime:2.2.3"
    compile "org.atmosphere:atmosphere-annotations:2.2.3"
    compile "org.atmosphere:wasync:1.3.2"

    runtime 'org.hsqldb:hsqldb:2.3.2'

    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
}

remotes {
    boot2docker {
        host = '192.168.59.103'
        user = 'docker'
        password = 'tcuser'
    }
}

ssh.settings {
    logging = 'stdout'
}

task deploy2docker << {
    ssh.run {
        session(remotes.boot2docker) {
            execute('rm -rf chatty')
            execute('mkdir chatty')
            get 'test.txt', buildDir
        }
    }
}

